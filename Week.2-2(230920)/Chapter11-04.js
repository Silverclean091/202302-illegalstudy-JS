
// 아래의 코드를 실행해보고 그 이유 생각해보기

const obj = {
    a: 1,
    b: {
        c: 2,
    },
};

const newObj = { ...obj };
// 연산자(...) : 기존 배열이나 객체의 전체 또는 일부를 다른 배열이나 객체로 빠르게 복사

newObj.b.c = 3;

console.log(obj);                       // { a: 1, b: { c: 3 } }
console.log(obj.b.c === newObj.b.c);    // true

// 연산자(...)를 사용하면 기본적으로 깊은 복사가 이루어진다.
// 다만 2차원 이상의 객체의 경우, 얕은 복사가 수행된다.

// 위 경우, newObj 객체 안의 b객체를 수정하였다.
// 이 경우는 얕은 복사가 진행되었기 때문에 obj 객체의 b객체가 같이 수정되게 된다.
